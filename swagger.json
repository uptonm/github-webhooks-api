{
  "swagger": "2.0",
  "info": {
    "description": "",
    "version": "1.0.0",
    "title": "GitHub Webhook Endpoint",
    "contact": {
      "email": "uptonm@wit.edu"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "basePath": "/api",
  "tags": [
    {
      "name": "repos",
      "description": "Everything about your repositories"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/repos": {
      "get": {
        "tags": [
          "repos"
        ],
        "summary": "Get all Repo populated with their last commit",
        "description": "This get request pulls from the MongoDB database of repos, and last updates(commits)",
        "operationId": "getRepo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Repos Returned"
          },
          "404": {
            "description": "No Repos Found"
          }
        }
      }
    },
    "/repos/{id}": {
      "get": {
        "tags": [
          "repos"
        ],
        "summary": "Update an existing pet",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of repo to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Repo Returned"
          },
          "404": {
            "description": "Repo Not Found"
          }
        }
      }
    },
    "/github/hook": {
      "post": {
        "tags": [
          "github"
        ],
        "summary": "Accept Post Webhook from GitHub Repo",
        "description": "This post request is sent by GitHub when an update occurs on a repo with a webhook to it.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Repo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request"
          },
          "403": {
            "description": "Bad request"
          }
        }
      }
    }
  },
  "definitions": {
    "Author": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "avatar_url": {
          "type": "string"
        }
      }
    },
    "Changes": {
      "type": "object",
      "properties": {
        "added": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "modified": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "removed": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Repo_Update": {
      "type": "object",
      "properties": {
        "update_id": {
          "type": "string"
        },
        "timestamp": {
          "type": "integer"
        },
        "message": {
          "type": "integer"
        },
        "url": {
          "type": "string"
        },
        "author": {
          "$ref": "#/definitions/Author"
        },
        "changes": {
          "$ref": "#/definitions/Changes"
        }
      }
    },
    "Repo": {
      "type": "object",
      "properties": {
        "repo_id": {
          "type": "string"
        },
        "repo_name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "last_update": {
          "$ref": "#/definitions/Repo_Update"
        },
        "complete": {
          "type": "boolean",
          "default": false
        }
      }
    }
  }
}